
package view;

import controller.AppController;
import java.util.List;
import javax.swing.DefaultListSelectionModel;

public class UI extends javax.swing.JFrame {
    private AppController appControl=new AppController();

//Method for selecting multiple items from Jlist without pressing Ctrl
 public DefaultListSelectionModel getSelectionModel(){ 
 DefaultListSelectionModel mymodel  =   new DefaultListSelectionModel() {
    public void setSelectionInterval(int index0, int index1) {
        if(super.isSelectedIndex(index0)) {
            super.removeSelectionInterval(index0, index1);
        }
        else {
            super.addSelectionInterval(index0, index1);
        }
     fireValueChanged(index0, index1);
    }
  };
   return mymodel;
}

    

    /** Creates new form UI */
    public UI() {
        initComponents();
        ageList.setSelectionModel(getSelectionModel());
        genderList.setSelectionModel(getSelectionModel());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dilwshUI = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ageList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        genderList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        showResultsButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        resultsJtable = new javax.swing.JTable();
        sortByBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        dilwshUI.setPreferredSize(new java.awt.Dimension(950, 450));

        ageList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "0-2", "3-5", "6-11", "12-17", "18-24", "25-34", "35-44", "45-54", "55-64", "65-74", "75+" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(ageList);

        genderList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Male", "Female" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(genderList);

        jLabel1.setText("Age");

        jLabel2.setText("Gender");

        showResultsButton.setText("Show results");
        showResultsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showResultsButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Back");

        resultsJtable.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        resultsJtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Region", "Targeted population percentage", "Targeted population", "Total population"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resultsJtable.setRowHeight(30);
        jScrollPane4.setViewportView(resultsJtable);
        if (resultsJtable.getColumnModel().getColumnCount() > 0) {
            resultsJtable.getColumnModel().getColumn(1).setMinWidth(100);
        }

        sortByBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Percentage", "Population" }));

        jLabel3.setText("Sort By:");

        javax.swing.GroupLayout dilwshUILayout = new javax.swing.GroupLayout(dilwshUI);
        dilwshUI.setLayout(dilwshUILayout);
        dilwshUILayout.setHorizontalGroup(
            dilwshUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dilwshUILayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(dilwshUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(showResultsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(dilwshUILayout.createSequentialGroup()
                        .addGroup(dilwshUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(dilwshUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(sortByBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
            .addGroup(dilwshUILayout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        dilwshUILayout.setVerticalGroup(
            dilwshUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dilwshUILayout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(9, 9, 9)
                .addGroup(dilwshUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(dilwshUILayout.createSequentialGroup()
                        .addGroup(dilwshUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(dilwshUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(dilwshUILayout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sortByBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(showResultsButton))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        getContentPane().add(dilwshUI, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents
     //1)diavazei eisodo tou xristh kai to pernaei gia epexergasia ston controller
     //2)kaleei thn methodo displayResults() gia emfanish apotelesmatwn ths epexergasias eisodou
    private void showResultsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showResultsButtonActionPerformed
     List selectedAges=ageList.getSelectedValuesList();
     List selectedGenders=genderList.getSelectedValuesList();
     if(selectedAges.size()==0 || selectedGenders.size()==0) return;  //na ftiaxw message edw
         String gender=getGenderStr(selectedGenders);
     int ages[]=getAgeIndexesArray(selectedAges);

     boolean sortByPercentage=true;
     if(sortByBox.getSelectedIndex()==1)sortByPercentage=false;
     appControl.calculateResults(gender,ages,sortByPercentage);
     displayResults();
    }//GEN-LAST:event_showResultsButtonActionPerformed
    
    //emfanizei ta apotelesmata ths epexergasias ths eisodou tou xristh ston Jtable 
    public void displayResults(){
        //dilwshUI.setVisible(false);
        //apotelesmataUI.setVisible(true);
        double [] numberResults=appControl.getNumberResults();
        double [] percentageResults=appControl.getPercentageResults();
        String [] regionNames=appControl.getRegionNames();
        double [] totalPopulation=appControl.getTotalPopulations();
        for(int i=0;i<resultsJtable.getRowCount();i++){
            for(int j=0;j<resultsJtable.getColumnCount();j++){    
                if(j==0){
                   resultsJtable.getModel().setValueAt(regionNames[i], i,j);
                }
                else if(j==1){
                   resultsJtable.getModel().setValueAt(percentageResults[i], i,j);
                }
                else if(j==2){
                   resultsJtable.getModel().setValueAt((int)numberResults[i], i,j);
                }
                else{
                   resultsJtable.getModel().setValueAt((int)totalPopulation[i], i,j);
                }
  
            }
        }
        
        
    }
    
    //methodos pou pairnei tis hlikies pou epilextikan kai epistrefei int array me ta index tous (p.x "0-2"=0,"3-5"=1 ,ktlp)
    //gia pio eukolh epexergasia ths eisodou ston controller
    public int [] getAgeIndexesArray(List selectedAges){
        int[] ageIndexes = new int[selectedAges.size()];
         for(int i=0;i<selectedAges.size();i++){
           ageIndexes[i]=getAgeIndex((String)selectedAges.get(i));
         }
        return ageIndexes;
    }

    //vriskei poia hlikia epilextike kai epistrefei to index ths me vash ton pinaka ages
    public int getAgeIndex(String age){
         String [] ages=new String[]{"0-2","3-5","6-11","12-17","18-24","25-34","35-44","45-54","55-64","65-74","75+"};
         for(int i=0;i<ages.length;i++){
             if(age.equals(ages[i])) return i;
         }
        return -1;
    }
    

    //vriskei poio fulo epilextike h an epilextikan kai ta 2
    public static String getGenderStr(List selectedGenders){
     String gender=null;
     if(selectedGenders.size()==1){
         if(((String)selectedGenders.get(0)).equals("Male")){
             gender="M";
         }
         else{
             gender="F";
         }
     }
     else{
             gender="B";  //both
     }
     return gender;
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ageList;
    private javax.swing.JPanel dilwshUI;
    private javax.swing.JList<String> genderList;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable resultsJtable;
    private javax.swing.JButton showResultsButton;
    private javax.swing.JComboBox<String> sortByBox;
    // End of variables declaration//GEN-END:variables

}
